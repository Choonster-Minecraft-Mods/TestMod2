buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

srcCompat = JavaVersion.VERSION_1_8
targetCompat = JavaVersion.VERSION_1_8

version = "${mc_version}-${mod_version}"
group = "${package_group}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${mod_name}"

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "eclipse"

    if (project.hasProperty('mappings_version'))
        mappings = project.mappings_version
}

repositories {
    maven { url = "http://coloredlightscore.us.to/maven/chisel-2-dev/" }
    ivy {
        name "BuildCraft"
        artifactPattern "http://www.mod-buildcraft.com/releases/BuildCraft/[revision]/[module]-[revision]-[classifier].[ext]"
    }
    maven { url = "http://mobiusstrip.eu/maven" }
    maven { url = "http://chickenbones.net/maven/" }
}

dependencies {
    compile "com.cricketcraft.chisel:Chisel2:${chisel_version}:deobf"
    runtime name: "buildcraft", version: "${buildcraft_version}", classifier: "dev"
    runtime "mcp.mobius.waila:Waila:${waila_version}"
    runtime "codechicken:CodeChickenCore:${mc_version}-${ccc_version}:dev"
    runtime "codechicken:CodeChickenLib:${mc_version}-${ccl_version}:dev"
    runtime "codechicken:NotEnoughItems:${mc_version}-${nei_version}:dev"
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

tasks.withType(JavaCompile) {
     options.encoding = 'UTF-8'
}

// Fix resources not being loaded in IDEA
// http://stackoverflow.com/a/27624502
sourceSets {
    main { output.resourcesDir = output.classesDir }
}
